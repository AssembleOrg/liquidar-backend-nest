version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: liquidar_postgres
    environment:
      POSTGRES_DB: liquidar_db
      POSTGRES_USER: liquidar_user
      POSTGRES_PASSWORD: liquidar_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - liquidar_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liquidar_user -d liquidar_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cach√© y sesiones (opcional)
  redis:
    image: redis:7-alpine
    container_name: liquidar_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - liquidar_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Gateway (API Gateway)
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: liquidar_gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_HOST=auth
      - AUTH_SERVICE_PORT=3001
      - GENERAL_SERVICE_HOST=general
      - GENERAL_SERVICE_PORT=3003
      - NOTIFICATIONS_SERVICE_HOST=notifications
      - NOTIFICATIONS_SERVICE_PORT=3004
      - EXTERNAL_SERVICE_HOST=external
      - EXTERNAL_SERVICE_PORT=3002
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - liquidar_network
    volumes:
      - ./apps/gateway:/app/apps/gateway
      - ./libs:/app/libs
      - /app/node_modules
    command: pnpm run dev:gateway

  # Auth Service
  auth:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: liquidar_auth
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - AUTH_POSTGRES_URL=postgresql://liquidar_user:liquidar_password@postgres:5432/liquidar_db
      - GENERAL_SERVICE_HOST=general
      - GENERAL_SERVICE_PORT=3003
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - liquidar_network
    volumes:
      - ./apps/auth:/app/apps/auth
      - ./libs:/app/libs
      - /app/node_modules
    command: pnpm run dev:auth

  # General Service
  general:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: liquidar_general
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - GENERAL_POSTGRES_URL=postgresql://liquidar_user:liquidar_password@postgres:5432/liquidar_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - liquidar_network
    volumes:
      - ./apps/general:/app/apps/general
      - ./libs:/app/libs
      - /app/node_modules
    command: pnpm run dev:general

  # Notifications Service
  notifications:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: liquidar_notifications
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
    networks:
      - liquidar_network
    volumes:
      - ./apps/notifications:/app/apps/notifications
      - ./libs:/app/libs
      - /app/node_modules
    command: pnpm run dev:notifications

  # External Service
  external:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: liquidar_external
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
    networks:
      - liquidar_network
    volumes:
      - ./apps/external:/app/apps/external
      - ./libs:/app/libs
      - /app/node_modules
    command: pnpm run dev:external

networks:
  liquidar_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 